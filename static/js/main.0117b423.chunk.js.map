{"version":3,"sources":["api/api.js","redux/films-reducers.js","components/Film/Film.jsx","components/Find/Find.jsx","redux/alphabetSort-reducer.jsx","components/MainPage/MainPage.jsx","thunk/films-thunk.js","App.js","serviceWorker.js","redux/store.js","index.js","images/358477.700xp.jpg"],"names":["instance","axios","baseURL","filmApi","get","then","response","data","results","planets","initialState","films","filmReducer","state","action","type","filter","el","episode_id","id","push","name","starships","characters","character","Films","props","classes","useStyles","React","useState","expanded","setExpanded","useEffect","getPlanets","film","getCharacters","getStarships","Grid","item","xs","Card","raised","onClick","CardHeader","title","subheader","release_date","CardMedia","className","media","image","photo","CardContent","Typography","variant","color","director","component","producer","Collapse","in","timeout","unmountOnExit","String","map","key","undefined","opening_crawl","makeStyles","theme","root","maxWidth","height","paddingTop","margin","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Find","click","setClick","AppBar","position","Toolbar","noWrap","Button","sortByName","search","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","inputProps","inputComponent","onChange","event","target","value","alphabetSort","flexGrow","backgroundÐ¡olor","menuButton","marginRight","spacing","display","breakpoints","up","borderRadius","shape","fade","palette","common","black","width","pointerEvents","alignItems","justifyContent","padding","inputReducer","connect","toUpperCase","includes","getFilmsThunk","dispatch","forEach","console","log","setPlanets","setStarships","setCharacters","sort","getSort","container","a","b","nameA","toLowerCase","nameB","Film","CircularProgress","App","Boolean","window","location","hostname","match","reducers","combineReducers","form","formReducer","planetsReduces","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0117b423.chunk.js","sourcesContent":["import * as axios from 'axios';\n\nconst  instance = axios.create({\n    baseURL:'https://swapi.co/api/',\n});\n\nexport  const filmApi = {\n    getFilms (){\n        return instance.get(`films/`)\n            .then(response => response.data.results)\n    },\n    getPlanets(planets){\n\n        return axios.get(`${planets}`).then(response=>response.data)\n    }\n};","const GET_FILMS= 'GET_FILMS';\nconst SET_PLANETS = \"SET_PLANETS\";\nconst SET_STARSHIPS = \"SET_STARSHIPS\";\nconst SET_CHARACTERS = \"SET_CHARACTERS\";\n\nlet initialState = {\n    films:[\n\n    ],\n\n\n\n};\nconst filmReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case (GET_FILMS):\n            return {\n                ...state,\n                films: action.films,\n            };\n        case(SET_PLANETS):\n            return {\n                ...state,\n                films: state.films.filter(el=> el.episode_id === action.id ?  el.planets.push(action.name) : {...state})\n            };\n        case(SET_STARSHIPS):\n            return {\n                ...state,\n                films: state.films.filter(el=> el.episode_id === action.id ?  el.starships.push(action.starships) : {...state})\n            };\n        case(SET_CHARACTERS):\n            return {\n                ...state,\n                films: state.films.filter(el=> el.episode_id === action.id ?  el.characters.push(action.character) : {...state})\n            };\n        default:\n            return state;\n    }\n};\n\nexport const getFilms = (films) =>({type:GET_FILMS, films});\nexport const setPlanets = (name,id) =>({type:SET_PLANETS,name,id});\nexport const setStarships = (starships,id) =>({type:SET_STARSHIPS,starships,id});\nexport const setCharacters = (character,id) =>({type:SET_CHARACTERS,character,id});\n\nexport default filmReducer;\n","import React, {useEffect} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport photo from '../../images/358477.700xp.jpg'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Planets from \"./Planets\";\n\n\n\n\n\n\nconst Films =(props)=>{\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    useEffect(()=>{\n        props.getPlanets(props.film.planets,props.film.episode_id);\n        props.getCharacters(props.film.characters,props.film.episode_id);\n        props.getStarships(props.film.starships,props.film.episode_id);\n    },[]);\n\n    const handleExpandClick = ()  => {\n        setExpanded(!expanded);\n    };\n\n    return(\n        <Grid item xs={6}>\n            <Card raised={true} onClick={handleExpandClick}>\n                <CardHeader\n                    title={props.film.title}\n                    subheader={props.film.release_date}\n                />\n                <CardMedia\n                    className={classes.media}\n                    image={photo}\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" >\n                        Director:{props.film.director}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Producer:{props.film.producer}\n                    </Typography>\n\n                </CardContent>\n\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n\n                           Planets: {props.film.planets !== String ?props.film.planets.map((el,key)=>\n                            <ul key={key} >\n                             {el.name !== undefined? <li>{el.name}</li>:<span></span>}\n                            </ul>)\n                        :<div></div>}\n\n                            Characters: {props.film.characters !== String ?props.film.characters.map((el,key)=>\n                            <ul key={key}>\n                                {el.name !== undefined? <li>{el.name}</li>:<span></span>}\n                            </ul>)\n                            :<div></div>}\n\n                            Starships: {props.film.starships !== String ?props.film.starships.map((el,key)=>\n                                <ul key={key}>\n                                    {el.name !== undefined? <li>{el.name}</li>:<span></span>}\n                                </ul>)\n                            :<div></div>}\n\n                            {props.film.opening_crawl}\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </Grid>\n    )\n};\nexport default Films;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n        margin:'5px'\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n","import React, {useState} from \"react\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from \"@material-ui/core/Button\";\n\nexport default function Find(props) {\n    const [click, setClick] = useState(false);\n    const handleExpandClick = () => {\n        setClick(!click);\n        props.sortByName(click);\n    };\n    const classes = useStyles();\n    let onChange = (event)=>{\n        const data = event.target.value;\n        props.alphabetSort(data);\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color='inherit'>\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                       tokarkin\n                    </Typography>\n                    <Button color=\"secondary\" variant=\"contained\"\n                            onClick={handleExpandClick} >\n                        {\n                            click ===false ?  <CheckIcon color='action' />: <CloseIcon />\n                        }\n                        Sort by name\n                    </Button>\n\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Searchâ¦\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                            inputComponent={'input'}\n                            onChange={onChange}\n\n                        />\n\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundÐ¡olor:'black',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.black, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.black, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));","\nconst ALHABET_SORT = 'ALHABET_SORT';\n\n\n\nlet initialState = '';\nconst inputReducer = (state = initialState, action) => {\n    switch(action.type) {\n\n        case (ALHABET_SORT):\n\n            return action.input;\n        default:\n            return state;\n    }\n};\nexport const alphabetSort = (input) =>({type:ALHABET_SORT, input});\nexport default inputReducer;\n","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getCharacters, getFilmsThunk, getPlanets, getStarships} from \"../../thunk/films-thunk\";\nimport Films from \"../Film/Film\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Find from \"../Find/Find\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {alphabetSort} from \"../../redux/alphabetSort-reducer\";\nimport {deleteData} from \"../../redux/planets-reducers\";\nimport Planets from \"../Film/Planets\";\n\n\n\nconst MainPage=(props)=>{\n    useEffect(()=>{\n        props.getFilmsThunk();\n    },[]);\n\n\n    const [sort, getSort]= useState(false);\n\n    let sortByName = (data)=>{\n        getSort(!data);\n    };\n\n\n    return(\n            <Grid container spacing={3}>\n                <Grid item  xs={12}>\n                    <Find sortByName={sortByName} alphabetSort={props.alphabetSort}  />\n                </Grid>\n\n                <Grid item xs ={12}>\n                    <Grid container  spacing={3}>\n                    {\n                        props.films !== undefined\n                            ? (\n                                sort === true\n                                    ?\n                                [...props.films].sort(function (a, b) {\n                                let nameA = a.title.toLowerCase(), nameB = b.title.toLowerCase();\n                                if (nameA < nameB)\n                                    return -1;\n                                if (nameA > nameB)\n                                    return 1;\n                                return 0;\n                            }).map((film, key) => <Films getCharacters={props.getCharacters}\n                                                         getPlanets={props.getPlanets} key={key}\n                                                         film={film} getStarships={props.getStarships}/>)\n                            : props.films.map((film, key) => <Films getCharacters={props.getCharacters}\n                                                                    getPlanets={props.getPlanets}\n                                                                    getStarships={props.getStarships}\n                                                                    key={key} film={film}/>))\n                            : <div>\n                                <CircularProgress />\n\n                            </div>\n                    }\n                    </Grid>\n\n                </Grid>\n\n            </Grid>\n\n    )\n};\n\n\n\nexport default connect(state=>({\n    films:state.films.films.filter(name => name.title.toUpperCase().includes(state.input.toUpperCase())),\n\n}),{getFilmsThunk,alphabetSort,getPlanets,getStarships,getCharacters})(MainPage);","import {filmApi} from \"../api/api\";\nimport {getFilms, setCharacters, setPlanets, setStarships} from \"../redux/films-reducers\";\n\n\nexport const getFilmsThunk  = () => {\n    return(dispatch) => {\n        filmApi.getFilms().then(data =>{\n            dispatch(getFilms(data));\n        });\n    }\n};\nexport const getPlanets = (data,id) =>{\n    return (dispatch) =>{\n         data.forEach(el=>\n        filmApi.getPlanets(el).then(data => {\n            console.log(data);\n            dispatch(setPlanets(data,id))\n    } ));\n    }\n};\nexport const getStarships = (data,id) =>{\n    return (dispatch) =>{\n        data.forEach(el=>\n            filmApi.getPlanets(el).then(data => {\n                dispatch(setStarships(data,id))\n            } ));\n    }\n};\n\nexport const getCharacters = (data,id) =>{\n    return (dispatch) =>{\n        data.forEach(el=>\n            filmApi.getPlanets(el).then(data => {\n                dispatch(setCharacters(data,id))\n            } ));\n    }\n};","import React from 'react';\nimport MainPage from \"./components/MainPage/MainPage\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\n\nconst App = ()=> {\n    return (\n\n        <BrowserRouter >\n\n            <MainPage  />\n\n        </BrowserRouter>\n\n\n    );\n};\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleWare from  \"redux-thunk\"\nimport {reducer as formReducer} from \"redux-form\";\nimport filmReducer from \"./films-reducers\";\nimport inputReducer from \"./alphabetSort-reducer\";\nimport planetsReduces from \"./planets-reducers\";\n\n\n\nlet reducers = combineReducers({\n    form:formReducer,\n    films: filmReducer,\n    input: inputReducer,\n    planets:planetsReduces,\n\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWare));\nwindow.store = store;\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from './redux/store';\n\nReactDOM.render(\n            <Provider store={store}>\n\n                <App />\n            </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/358477.700xp.ce4b4809.jpg\";"],"sourceRoot":""}